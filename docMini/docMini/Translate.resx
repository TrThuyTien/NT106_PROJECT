<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_translate.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAACAgSURBVHhe7d17
        sO1nXd/x3BMQAgnBAAkRHDpja0WgCgGpGsCizMCgkHCx2j8ckPudAFELOrYEENABk3C1Yum0EhIgQeQa
        JAQKcpnQcB/KvVxyISEUkgBpP19Pjjk5efY+e++11t7P7/e8XjPvmQhysvc661m/53dZz7MfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwBYckO6VTklnp0+my9KPrqv++aJ0VnpOumeq/w0AMEG3Ty9IX0v/b5N9NZ2ajk0AwAQclc5I
        V6fWwX0z1Z9xeqo/EwDo1CNSXdJvHcwX6dL08AQAdOTg9MrUOngvs1ek+ncBADvspumtqXXAXkX176p/
        JwCwQ+psfDsP/rs7P90sAQA7oC7Jtw7Q29F5yZUAANhmJ6XWgXk7cyUAALbRkemS1Doob3cmAQCwTep7
        /q2D8U7ldgAArFitzreMRX6WnSsBALBCtURv6wDcQ64EAMAK1CY9tU5/6+DbS64EAMCS1U59rYNub7kS
        AABLVNv1tg64PeZKAAAsSe3Z3zrY9porAQCwBBel1oG251wJAIAFrWKr3+3IlQAAWMA1qXWAnUKuBADA
        Fk15AlCZBADAFkz1FsCeuR0AAJs0xYcAW7kSAACbMLWvAa6XKwEAsEHPTq2D6VRzJQAANuD41DqQTjlX
        AgBgH/ZPX0qtA+mUcyUAAPbh+al1EJ16rgQAwDqOSVen1kF06rkSAADrOC21DqBzyJUAAFjDkeni1DqA
        ziFXAgBgDQ9NrYPnXDIJAIA1nJ5aB8+55HYAADQcmOa0OmArVwIAoKHOkN+dWgfPueRKAAA01MHxXal1
        8JxLrgQAQINJAAAMyiQAAAZlEgAAgzIJAIBBmQQAwKBMAgBgUCYBADAokwAAGJRJAAAMyiQAAAZlEgAA
        gzIJAIBBmQQAwKBMAgBgUCYBADAokwAAGJRJAAAMyiQAAAZlEgAAgzIJAIBBmQQAwKBMAgBgUCYBADAo
        kwAAGJRJAAAMyiQAAAZlEgAAgzIJAIBBmQQAwKBMAgBgUCYBADAokwAAGJRJAAAMyiQAAAZlEgAAgzIJ
        AIBBmQQAwKBMAgBgUCYBADAokwAAGJRJAAAMyiQAAAZlEgAAgzIJAGbryHS39JD0tPSi9Nr05nRB+kz6
        Yrrsur6XWh8ikqbbeakmO8AM3TrdNz011QH+I+mK1PowkDReJgEwAwemn02PTq9Ln0ytAS9Je+Z2AEzQ
        T6fHp3PTlak1uCVpX7kSAJ07IN07vTR9NrUGsiRtJZMA6Mz+6fhUB/2vptbAlaRlZBIAHbhtOiV9IbUG
        qiStor9LBydgG9Ul/t9IZ6UfptbglKRVd1oCtsFN0mOS+/qSeumhCViR+p7+H6dvp9YAlKSdqp458jwA
        LFmtxPe8ZFEeST1Xn1PAEtwiOfBLmkr/N90mAVt0UHpCuiS1Bpkk9dozErAFtRb/J1JrYElS712UgE24
        Q3pLag0oSZpSd0nAPtTKfbUhz3dTayBJ0tR6YgLWUbvxfTC1BpAkTbVXJ6ChVvA7OV2dWoNHkqbcRxOw
        l/qKzNtSa9BI0hy6OAF7qKUyL02tASNJc+mqBER9r//U1BookjS3fpBgeLV+/7tTa5BI0hxzC4Dh3St9
        PbUGiCTNNQ8BMrS631+XwVqDQ5Lm3KsSDOnJ6cepNTAkae7VXiYwlINTLYDRGhCSNEqWAmYoh6azU2sw
        SNIo2QyIodw0vSO1BoMkjZTtgBnG4en81BoIkjRS9eDzbRPMXh38P5xaA0GSRuulCWavLvv/Q2oNAkka
        rVr856gEs3ZYemdqDQJJGrFa+wRmrb7q95bUGgCSNGIvSzB7p6XWAJCkETs31YZnMGunpNYAkKQROy/V
        81Awayela1NrEEjSaL0v3SzBrNWuflel1iCQpNFy5s8Qjk5fS61BIEmj5cyfIdSDLb7rL0m7cvBnGH+R
        WoNAkkbLwZ9h1KIWrUEwepel96ZXpfpWxCPTCenO6Zh0RHJvkJHU+/3dqTVe5pJ7/gzj2HRpag2E0fpU
        enl6SLp9Aq7n4A8zckB6T2oNhBGq9bxfnerM3q5esDYHf5iZZ6XWQJhz9RXHc9KJ6ZAErK8Oiu9KrfE0
        l9zzZyj/Ol2dWoNhjn00PTYdmYCNceYPM1OX/i9IrcEwt96fHpj2T8DGOfOHGXpyag2GObX7wA9snoM/
        zNAd0pWpNSDm0IfTPRKwNS77w0zNdX//+s5+3eOv2xvA1jj4w0zdN7UGxJSrXQtfl34yAVvnsj/MVK31
        f1FqDYqpVhsX1cp8wGKc+cOMPTG1BsVUqzOV2yRgMc78YcZukS5JrYExtX6YnpN8rQ8W58wfZu55qTUw
        ptbX070TsLgRDv611LmDP8O6ZfpOag2OKfWFdKcELM5lfxjA81NrcEypjyRP+cNyOPjDAG6dvpdaA2Qq
        vTPdPAGLc9kfBvHHqTVAptIb06EJWJyDPwziJqn2u28NkilUA9nBH5bDZX8YSC2L2xokU+gfk8v+sBwO
        /jCQ+o78p1NroPTe59PRCVicgz8M5jdSa6D0Xn3Pv3YrBBbnnj8M6OzUGiw9Vyv8WeQHlsOZPwyo1se/
        JrUGTM89OwGLG+HM38EfGk5JrQHTc29L9vGHxTn4w6Dq4b9aMrc1aHqttvStBYuAxdTBv+6Jt8bZXHLP
        H9ZwfGoNml67NtnPHxbn4A+De2lqDZxe+6sELMZlfxhc3UOvy+mtwdNjlyUb/MBiHPyB/f5tag2eXntM
        ArbOwR/4J1O6/P/h5Kl/2Dr3/IF/9tnUGkQ9do8EbI2DP/DP7phag6jH/j4BW+OyP3ADj0+tgdRj9awC
        sHkO/sCNnJtag6m3PpCAzXPwB27kwPTd1BpQvXX/BGyOgz/QdNfUGlC99dEEbE4d/D3wBzQ9MbUGVW89
        NgEb58wfWNd/T62B1VNXp1slYGMc/IF9+nJqDa6eOjMBG+OyP7BPtY1ua3D11oPSHNQDl/dMp6Q3pk+m
        2tPgmlS/5/eu+7+rL6bPpPenN6fXphelp6XfSndLRyTYkzN/YEPul1oDrKcuSYekKbt9OjWtYrOly9NH
        0mvSU9J901GJ8Tj4Axv21NQaZD316jRVdYXlFameYWj9bqvsK+n16QnpLqmuPjBfLvsDm1L76bcGWk89
        Mk1R/dyXptbvtBPVWg/npMelWvqZ+XDmD2xaXTpuDbZeujbdNk3JwelVqfX79FQ9X/CS9Etp/8Q0OfMH
        tqTuH7cGXC99Kk1JfUj9XWr9Lj1XtwtenGqXRZOB6XDwB7bkyNQacD318jQVdeY/xYP/3n0+PTvdJtGv
        er+9NbX+DueSy/6wIvU1stag66mHpKmYwmX/zVRfTayvKv56OiDRl3q4tPX3Npec+cMK1cG1NfB66tg0
        Bb+dWj//XKrnBR6dbpLYeSel1t/TXHLmDyv29NQafL1Ui+FMQX3Vr6en/VfZt9Jzk3UGdk699nN+vznz
        h23wwtQagL303jQFc78U2+rK9KfJSoTb74zU+juZQw7+sE16XwPglal3dYtiJxb56aWaCNQKh7dMrN6c
        328u+8M2qvXlWwOxl2q9/N7Vwa/1s4/WxakWGDoosTpzfb8584dtdkFqDcZe6n0FwHoy/qup9bOP2qfT
        AxLLN9f3m4M/7IB6srs1IHvphNSz2tWv9XNrv/3elI5LLM8c328O/rBDVrEz3TL7udSzukXR+rm1q9p7
        4InJGgLL8ZzUep2nmnv+sIPqK12tgdlLx6SenZVaP7du2AfSzyYWM6f3mzN/2GG97wNwi9Szi1Lr59aN
        uyo9I7kasHVzeb8584cOfD+1Bmgv9b7q3CiL/yyz2rJ2Kqs79qYWxmq9plPKmT904kepNUh76cDUs5G/
        /79Il6TfTGxO7c3Qej2nkjN/6IgJwGJMABarVlCsHe3YmClPABz8oTNuASzGLYDFqwODbYc3Zqq3AFz2
        hw55CHAxHgJcTvV11OMT65vi+82ZP3TK1wAX42uAy6u+JdD7yo87bWrvN2f+0LHeFwK6c+qZhYCW27Xp
        eYm2Z6fW69Zjzvyhc70vBXyf1LO6bN36ubVY9XCgTYVubCrvN2f+MAHvT60B3EtT2AzoK6n1s2uxzkmH
        Ja43hfebgz9MRO/bAf9B6t3zU+tn1+K9PTmY3FDP7zcHf5iQ16TWQO6lV6Xe1ap21gNYXeenwxO71IOx
        Pb7f3POHiXlhag3mXvqHNAWnp9bPr+X0oWQScL3TUut12qmc+cMEPT21BnQv1cInU3Bkuji1fgctpwuS
        M8xdbpVqOeXW67TdOfjDRD0ktQZ1Tx2XpuDhqfXza3nVMwGHJvbb76Gp9RptZy77w4TdLbUGdk/VB91U
        nJFav4OW15uSrwjuspO3npz5w8TVpevW4O6pv0xTUZsXnZ1av4eW16sTu95vO7E6oDN/mIne9wP4dJqS
        Oit6a2r9Llpez0rser/Vmgmt12gVnZuc+cNM/GNqDfSeul2aktri1jcDVlstG/ywxK5bItvxfqtvH7j9
        AjPy2tQa7D3122mK6gDl2wGr6wfJLoLXOymt4tsB9WeemICZeUpqDfqeqgWLpqq+slXPMdRud63fTYv1
        1XR0Ypfd77dlLBZUf8bLUz0rBMxQbbjTGvw9VWcgh6QpqxXcahlXewcsv/OSS9M3VO+3U9NW3m/1v6n3
        au/bcQMLunVqfQj01oPTHNSGLndPtbXrG9In0qXJcsKL9eLEjdX77R7p5HRmujDV++2a66p/rv+s/rv6
        /6n35v4JGMSXU+tDtafq604jqCesj0h19nXndEKqZyBqY6TaG+G9qVZIbL1GozeXSSLAtvlvqfWB2lN1
        hnxUYpdaIbEWSar7vfVVydZrNlp1q2hq3xgB2FGPT60P1N56XKLttqmuFNQDk72sE78TvTPVZW8ANuCu
        qfVh2lsfS+xbrRB3v/S69P3Uei3nXG1yBcAG1AHju6n1Ydpbv57YuPoKV105+WhqvZ5zrL5y+S8TABuw
        ncuJLtIHEltz7/Su1Hpd59YHk1sBABtQZ4mtD9Ie+5XE1tVEYCoTvkXyzAjABtwxtT5Ee+wdicXdM30k
        tV7jOVS3tW6fANiHz6TWB2mP3SuxuHr+o74F8p3Uep2n3hsTAPvwktT6EO2xeqitDl4sR60h/4pUu+y1
        Xu8p92sJgHX8Ump9gPZanbmyXPdN/ye1Xu+pVkvdmiwCrKPWAP9San2I9tgVqRbAYblqf4i3pdZrPtUe
        kwBYR22q0voA7bVa7Iblq6/Q1f4DP0yt131qfTvdPAGwhto5rPUB2mt1z7ouW7Mav5y+kVqv/dT6wwTA
        Guo2wOdT6wO01+qe9dGJ1bhD+mxqvfZT6vJUOy0CsIbnpNYHaM+9J3nQa3VqgjWH5YT/JAGwhvqwvya1
        PkB7ziXe1ap76FNfSrgWB6qvPAKwhrNS6wO0536cPA+wWoemKb439uyPEgBrqF33Wh+evVcPrP10YnUO
        SW9Prdd/Cn0r3SQB0FAPA34qtT5Ae+8L6TaJ1anbAVPeR+DRCYA1/H5qfXhOoU+kWyZWpxYMmtL+EXtW
        32qwXTDAGup+75S/A35eOiyxOnW7ZarvkbrNBcAanptaH55T6exUExlWpxYL+lFqvf49d2YCYA1HpStT
        6wN0Kr07HZ5YnXqyvvXa91wtc2wvCYB1/KfU+gCdUvVMwO0Sq1H306f4zYCTEwBrqIfpLkutD9Ap9b/T
        v0isRi0gNbWthD+X6hsvAKzhP6bWB+jU+mb61cRq1EJMtUFT67XvtV9MAKyh7qFfnFofoFOrHlire9a+
        BrYaf5Nar3uv/VkCYB2PS60P0KlWGwh5CGz56lbAd1LrNe+xryS3AQDWcVD6X6n1ITrV6p71/RLL9YTU
        er177V4JgHXcJ7U+QKfeOenYxHLU1sxT2j74xQmAfXhTan2ITr26bF1nrnXwYnF1Vt16nXus9r0AYB+O
        S7WveuuDdA7VmatLwsvxrtR6jXvMLpIAG/Ck1PoQnVPvTw9MbN0JqfXa9thjEgD7UF+hqwNk64N0bl2Q
        aiLgSfGtOT+1XtfeenMCYAP+Vbo6tT5M59jHUz0jcKvExj0gtV7P3roief4DYIOemVofpnOuFhJ6Z/rd
        dNPE+urKSU2eWq9lb/18AmAD6lbAlB70WnaXpv+SajLga4Rrm8q6ALXYFQAbdEy6JLU+UEfrs+n0dGK6
        Q2KXI9MUbhe9PgGwCb+VWh+oo3d5qofgXptq/4HfSbVhTl1qrisGR6SbpxGcnVqvUU99KQGDqEvY90zP
        SWeli1JtffvD66p/ruVv6797djo+2USm7SWp9aGqjXVNqvdbvQffmE5Jc3q/TWWSeFQCZqzOvk5NX02t
        D4H1qs1Dnp/q0jfXq70C3ptar5m2Xr1H6/029WcMDk31zETrd+ypWu4amKGa3Z+RlnE/sv6M05KvhV2v
        doL7Wmq9Xlqser/V8wVTPkOtByZbv1tPPTkBM/OItIozkPozH5bYpS5b/yC1XistXj1w+fA0RfVtidbv
        1FOvScBMHJxekVqDfZnVlYW6DM6uCdG1qfU6aTnV+63e21NStzFav0tPfTgBM1ALtZybWgN9FdW/y+Iw
        uzwrtV4jLa+3pqm93+qrkq3fpZdqV0hg4uqDcScWqakPZVcCdvnL1HqNtLxqVcJD0lTUcwyt36OnbpmA
        iaqD/7tTa3BvR3V5ll0ToTel1muk5VUH1amoRZJav0NP3TUBE7RTZ/5798jErq9/vT21XiMtr6k8iPpT
        qfXz99RvJmBidvrMf8/qaW1fEdzlJskaAautvo0yha8I1uZAtUJi63fopaclYEJ6OvjvrtYJYJfD04dS
        63XScqpnLqaglkdu/fy99IIETEQvl/33rpZ3PS6xy81Sb5O0OVWLBU3h/VZ7I7R+/l6yFgBMRI9n/ntW
        Sw5zvfr78kzA6qplg3tXGyO1fvZeqgdXgc71fvCvau8AGwjdUH1trTa8ab1eWqxaivnA1LN/n1o/ey+9
        PwEdm8LBf3f3SNxQfUVwO1ZoHLG7p57Vlsitn7uXPp2ATvV6z3+tTk601YqBlg1ebrV1dc/uklo/dy/V
        VTugQ1M689/dmYm1PSR9P7VeO22+N6Se3T61fu5e+lYCOjO1M//dXZhYX+0iWHvft14/ba5PpJ4dkVo/
        dy/ZDwA6M8Uz/93VokDsWy1kU2vbt15DbbyLU89qLLd+7l6qq1FAJ6Z65r+7+n42G1NPsNdXJz0XsPWu
        Sj2rv+PWz91LP05AB6Z+8K96/0DuUa3HXldOWq+n1s8EYLFMAKADU77sv2duAWzN0am2V269plo7twAW
        yy0A2GFzOPPfnYcAt642j3l6qrPa1murG+chwMXyECDsoLmc+e/O1wAXd6f0ntR6fXXDfA1wsXwNEHbI
        nM78d/fMxOLqasCj0xWp9TprV7W4Us/umlo/dy9ZCAh2wNzO/HfX+9KsU3Nsqqsqrdda++33i6ln90ut
        n7uXLAUM22yuB/8vpzpzZfl+NX08tV73Uav3W++bT9kMCPhncz34V1PYnnXK6itlv5++nVqv/2j959Q7
        2wED/2SO9/x3V0+u3y6xej+R6t73Zan1dzFC9X47JvXur1Lr5++lVyVgxeZ85l+9PLG9bpn+JH03tf5O
        5tzL0hTUJfbWz99LL0jACs394F+L/xyZ2Bm3Sn+Yvplafz9zq26BTOH9Vs/DXJ5av0MvPS0BKzLny/67
        e0Ri5x2WHpXqye7W39NcOjFNwR1T6+fvqVqGGliBuZ/5V6cl+lJPxt8/1dcHr0mtv7epNqVbTSel1u/Q
        U3dJwJKNcOZ/bjoo0a/aY+Dk9NnU+jucUuekKb3fzkit36On6jkSYIlGOPM/L9XvyXT8QnpRqu/Pt/5O
        e64O/lN7v30utX6XXqpvkQBL5OBP7+rhtHumP0ufTK2/456qy/5Tu9LU+x4A1YcSsCR1UJz7Zf/3pZsl
        5uOnUi0wVIvC9PTUej3tP5UH/vb2H1Lrd+opawDAkjjzZw7qAcI7p8el/5q+lFrvhVVWi/zU9/yn/NXS
        v06t362nnpyABTnzZ87qQHxCelKqs8YPp1WsQlg709XyvlNY4W89h6RaG6P1O/ZU7S8BLMDBn1HdItXX
        yB6cnpJqVbnXpLqVcH76VPpCqoNhTRiuTPV+ujpdmi5MtZ9/LWtcu/r1vrHPRj007T2GeqwWkAK2yGV/
        YG81AWqNpZ6qWzvAFjnzB/ZWZ9V1haM1nnqqnu8AtsDBH2h5QmqNp956bAI2yWV/oKXWV/h4ao2p3qpv
        egCb4OAPrOUBqTWmeqvWepjLA5ewLVz2B9bT+97/uzs7ARvk4A+s5z6pNa56rFZ9BDbAwR/YlyndGqyl
        n4F9GOGe/3uSe/6wdfdOrbHVY7X5E7APDv7AvhyYPpZa46vHagdIYB0u+wMbURvqtMZXrx2fgDU4+AMb
        cXT6TmqNsR6rzZZqrQKgwcEf2KjXp9YY67UXJqDBPX9go34tXZta46zXfiEBe3HwBzbqNukbqTXOeu2z
        CdiLy/7ARtUSuu9IrXHWc89MwB4c/IHNeF5qjbOeuybVVQvgOg7+wGb8SvpRao21nntDAq7jnj+wGXdK
        30qtsdZ7909AOPMHNuPWqR6ia4213vtMsvUvhIM/sBmHp4+m1libQr+XYHgO/sBmHJKm+MT/7uqWxWEJ
        huaeP7AZh6azU2usTaU/SDA0B39gM+qyf42p1libSlekIxMMy2V/YDNqg58p3/PfXa1XAMNy8Ac2447p
        c6k11qZU7VB4RIIhuewPbMYJaarf89+7UxIMycEf2KgD03PTFFf4a1WTGFcFGZLL/sBG1QI/f59a42yq
        PSrBcJz5AxtV+/lPbUvfffXxVFc0YCjO/IGNqF3xXpeuTa1xNuVqsyIYijN/YF/qzPhJ6fLUGmNTz45/
        DMfBH9iXe6e6PN4aX3OoFv05JsEwXPYH1lMH/nNSa2zNqccmGIaDP7CW+6UPpNa4mlsfTLb7ZRgu+wN7
        Oyo9Ic35Uv/eXZV+JsEQnPkDu9WOfQ9Mf5uuTq3xNOeemmAIzvyBY9Pvpr9Ol6XWOBqht6f9E8yegz+M
        6Q7ppHRGmsNGPcvo2+m2CWbPwR/m5+apdqy7fbpLum/6nfRH6bXp/Wmu39lfpFrA6EEJZq8OinO/5y9J
        G+0FCWbPwV+Srq+uFB6UYNYc/CXp+r6SavdCmLUR7vlL0kb7frp7gllz5i9J11cP/T0ywaw585ekG/aM
        BLNWW3WenVoDQJJG7JUJZu/01BoAkjRib0x1YgSz9tDUGgCSNGLvSLXPAcxarQR2cWoNAkkarQvSTySY
        vZel1iCQpNH6n+nwBLN3dPpBag0ESRqp2gbcwZ9h/GlqDQRJGqm3pfoaNAyh9rH+YmoNBkkapbekwxIM
        o5a1bA0GSRql05Kv+jGck1NrQEjS3KvlfZ+XYEhnptbAkKQ5Vxv71NonMKwLU2twSNJcqy197erH8C5J
        rQEiSXOsNjqznz/E1ak1SCRpTtX9/r9IBycgrkqtwSJJc+nb6UEJ2INbAJLm3DvT7RKwFw8BSppjdXXz
        qakWOwMa/kdqDR5Jmmrnp59JwDqemVoDSJKm1hXpyemABOzD3VJrIEnSlPrbdEwCNqjuj30htQaUJPXe
        x9IvJ2ALai3s1sCSpF77ZnpUcrkfFnB0qnWxW4NMknrq0lQnLYcnYAn+PLUGmyT10OWpDvy3SMASHZG+
        lVoDT5J2qm+kU1J9RgErcmJqDUBJ2u4+lX4vHZqAbXB6ag1GSVp1tTnZG9K/S1bwg21WO2Wdm1qDU5JW
        0WdSLUr2kwnYQTdN70mtgSpJy+hL6YXp3ySgIyYBkpbdRelF6fjkEj90zCRA0iJ9J52VHp2OS8CEmARI
        2mhfTH+THpt+LlmlDybOJEDSntVqfB9Kr0xPTCekIxMwQyYB0jy7Ml2WLkm1MVh9/772039TenU6NT0l
        PTj9fLISHwyoJgHvSq0Pkbn0vnSzBADswSQAAAZlEgAAgzIJAIBBmQQAwKBMAgBgUCYBADAokwAAGJRJ
        AAAMyiQAAAZlEgAAgzIJAIBBmQQAwKBMAgBgUCYBADAokwAAGJRJAAAMyiQAAAZlEgAAgzIJAIBBmQQA
        wKBMAgBgUCYBADAokwAAGJRJAAAMyiQAAAZlEgAAgzIJAIBBmQQAwKBMAgBgUCYBADAokwAAGJRJAAAM
        yiQAAAZlEgAAgzIJAIBBmQQAwKBMAgBgUCYBADAokwAAGJRJAAAMyiQAAAZlEgAAgzIJAIBBmQQAwKBq
        EvCe1Dp4zqX6/er3BAD2MMKVgLemgxIAsIcRrgSckQCAvYxwJeCRCQDYy9wnAZemoxIAsJe53w44LQEA
        DXO+EnBNOi4BAA1zvhJwagIA1jDXKwFfTwckAGANc70ScI8EAKxjjlcCTk4AwD7M7UrAmQkA2IA5XQm4
        MAEAGzSXKwGXJABgE+ZwJeDqBABs0tQnAVclAGALpnw7wC0AAFjAVK8EeAgQABY0xSsBvgYIAEswtSsB
        z0wAwBJM6UrA3RMAsCRTuBLwlbR/AgCWqPcrAc9PAMAK9HoloL7/f7sEAKxIj1cCXp4AgBXr6UrApemo
        BABsg14mAY9IAMA22unbAaclAGAH7NSVgHPTQQkA2CE1CagDcutAvYrq31X/TgBgh9XZ+BmpdcBeZnXZ
        35k/AHTmYamezG8dvBeptvo9MQEAnbpVqjP1q1PrYL6Z6s+o7/kfmQCACTgmnZpqnf7WwX29vpxqed/6
        MwCACTog3SOdnGrP/gtT3Sa4JtUZfv1z/Wf139WWvrWrn419AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgE3ab7//D/niPb1n
        GU2/AAAAAElFTkSuQmCC
</value>
  </data>
</root>